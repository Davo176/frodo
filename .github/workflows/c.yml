name: Test C implementation

on:
  push:
  pull_request:

jobs:
  test-basic:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        generation_a: ['AES128', 'SHAKE128']
    steps:
    - uses: actions/checkout@v2
    - name: Build
      env: 
        GENERATION_A: ${{ matrix.generation_a }}
      run: make
    - name: Frodo640
      run: frodo640/test_KEM
    - name: Frodo976
      run: frodo976/test_KEM
    - name: Frodo1344
      run: frodo1344/test_KEM
    - name: Frodo640-AES KATs
      if: ${{ matrix.generation_a == 'AES128' }}
      run: frodo640/PQCtestKAT_kem
    - name: Frodo640-SHAKE KATs
      if: ${{ matrix.generation_a == 'SHAKE128' }}
      run: frodo640/PQCtestKAT_kem_shake
    - name: Frodo976-AES KATs
      if: ${{ matrix.generation_a == 'AES128' }}
      run: frodo976/PQCtestKAT_kem
    - name: Frodo976-SHAKE KATs
      if: ${{ matrix.generation_a == 'SHAKE128' }}
      run: frodo976/PQCtestKAT_kem_shake
    - name: Frodo1344-AES KATs
      if: ${{ matrix.generation_a == 'AES128' }}
      run: frodo1344/PQCtestKAT_kem
    - name: Frodo1344-SHAKE KATs
      if: ${{ matrix.generation_a == 'SHAKE128' }}
      run: frodo1344/PQCtestKAT_kem_shake
  test-sanitize:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        generation_a: ['AES128', 'SHAKE128']
        sanitizer: ['address', 'undefined']
    steps:
    - uses: actions/checkout@v2
    - name: Build
      env: 
        GENERATION_A: ${{ matrix.generation_a }}
        EXTRA_CFLAGS: -g3 -fno-omit-frame-pointer -fno-optimize-sibling-calls -fsanitize-address-use-after-scope -fsanitize=${{ matrix.sanitizer }}
      run: make CC=clang-11
    - name: Frodo640
      run: frodo640/test_KEM nobench
    - name: Frodo976
      run: frodo976/test_KEM nobench
    - name: Frodo1344
      run: frodo1344/test_KEM nobench
